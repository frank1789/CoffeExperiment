\chapter{Esperimento 2}
In questa parte dell'eperimento si registra nella design matrix i valori del tempo assunti come resa del processo, si è inoltre assunto di misurare l'intero processo in modo da ridurre il peso dell'errore nella misura del tempo invece che registrare il solo tempo di estrazione.
Una volta terminate la campagna di prove si riportano i risultati nel dataframe. 
<<echo=F,results=hide>>=
# Clean work space and screen options
rm(list = ls())
close.screen(all = TRUE)

# get and set working directory
getwd()
setwd('/Users/francescoargentieri/ProjectR')

# load library
library(lubridate)
library(MASS)
@
<<>>=
df <- read.table("DesignMatrix-ResultTime.dat", header = T)
@
Nell' importazione del dataframe come fatto in precedenza si codificano i fattori e i livelli con indetificativi convenzionali; inoltre si effetua una conversione della risposta “\emph{Yield}" dal formato [mm:ss] (minuti e secondi) in quantità numerica espressa in secondi [s] tramite la funzione:
<<>>=
df$Yield <- as.numeric(as.period(ms(df$Yield), unit = "sec"))
@
<<result=hide, echo=F>>=
df$WaterType <-
  factor(
  df$WaterType,
  levels = c('Levissima', 'SanBenedetto'),
  labels = c('-', '+'))
  df$Pressing <-
  factor(df$Pressing,
  levels = c('No', 'Yes'),
  labels = c('-', '+'))
  df$Heat <-
  factor(df$Heat,
  levels = c('Low', 'High'),
  labels = c('-', '+'))

names(df)[3] <- "A"
names(df)[4] <- "B"
names(df)[5] <- "C"
names(df)[6] <- "D"
names(df)[7] <- "E"
@
Quindi si verifica il risultato ottenuto:
<<>>=
df
@
Definendo un modello lineare espresso dalla seguente relazione $(Yield \sim A*B*C*D*E)$ si ottiene come osservato per l'esperimento precedente che i residui sono nulli, per l'ipotesi già osservate di piano fattoriale completo e assenza di replicazioni è necessario individuare l'effeto dei fattori, quindi, applicando il metodo di Daniel  si osserva il grafico quantile--quantile per il modello lineare completo:
<<echo=F,results=hide>>=
options(SweaveHooks = list(fig = function() par(mfrow=c(1,1)))) 
df.lm<- lm(Yield ~ A * B * C * D * E, data = df)
anova(df.lm)
@
<<echo=TRUE,fig=T,include=FALSE>>=
effects <- as.vector(df.lm$effects)[2:length(df.lm$effects)]
qn      <- qqnorm(effects,
                  datax = T, 
                  ylab = "Effects Quantiles", 
                  main = "Normal probability plot")
text(qn$x, qn$y, lab = names(df.lm$effects)[2:length(df.lm$effects)], pos = 4)
qqline(effects,  datax = T, col = "dodgerblue")
@
\begin{figure}[htb]
\centering
  \includegraphics[width=0.80\textwidth]{Report-025}
\caption{da inserire}
\label{fig:QuantileEffectTime}
\end{figure}
\newpage
\noindent Dalla figura \ref{fig:QuantileEffectTime} osserviamo che gli effetti più significativi, sono quelli che si discostano dalla retta, effetuando una prima scrematura.
Il modello viene modificato utilizzando la relazione $(Yield \sim A * B * D + C * E)$ quindi si ricava la tabella \textsc{anova} e se ne determina la significatività degli effetti.
<<>>=
df.lm2 <- lm(Yield ~ A * B * D + C * E, data = df)
anova(df.lm2)
@
<<echo=F,results=hide>>=
options(SweaveHooks = list(fig = function() par(mfrow=c(2,2)))) 
@
La validità del modello avviene verificando la normalità dei residui e l'assenza di pattern:
<<fig=T,echo=F,include=FALSE>>=
qqnorm(df.lm2$residuals, datax = T)
qqline(df.lm2$residuals, datax = T, col = "red")
plot(df.lm2$fit, df.lm2$res, xlab = "Fitted values", ylab = "Residuals")
hist(df.lm2$residuals, xlab = "Residuals", main = "Histogram of residuals")
plot(df$RunOrder, df.lm2$residuals, xlab="Actual Run Order", ylab="Residual",
     main="Run Order Plot")
@
\begin{figure}[h]
\centering
  \includegraphics[width=0.80\textwidth]{Report-028}
\caption{modello lineare $(Yield \sim A * B * D + C * E)$, analisi dei residui}
\label{fig:lm2Time}
\end{figure}
%
\newline \noindent Si osserva, in figura \ref{fig:lm2Time}, una distribuzione normale nell'istrogramma e l'assenza di pattern nel "Fitted value Pattern". Dato un basso valore \emph{p-value} nelle interazioni A:B, A:D, B:D, C:E, si modifica di conseguenza il modello, impostando una relazione in cui non viene considerata la possibilità di interazione tra i fattori, assumendo $(Yield \sim A + C + E)$ si ottine:
<<>>=
df.lm3 <- lm(Yield ~ A + C + E, data = df)
anova(df.lm3)
@
Si verifica l'adeguatezza del modello:
<<fig=TRUE, echo=FALSE, include=FALSE>>=
qqnorm(df.lm3$residuals, datax = T, main = "QQ-plot residuals")
qqline(df.lm3$residuals, datax = T, col = "red")
plot( df.lm3$fitted.values, df.lm3$residuals, ylab = "Residuals" , xlab = "Fitted values",
      main = "Fitted values pattern")
hist(df.lm3$residuals, xlab = "Residuals", main = "Histogram of residuals")
plot(df$RunOrder, df.lm3$residuals, xlab="Actual Run Order", ylab="Residual",
     main="Run Order Plot")
@
\begin{figure}[h] 
\centering
 \includegraphics[width=0.70\textwidth]{Report-030}
\caption{modello lineare $(Yield \sim A + C + E)$, analisi dei residui}
\label{fig:MACTime3}
\end{figure}
\newline \noindent Si nota che il grafico “Fitted value Patterns", in figura \ref{fig:MACTime3}, mostra un andamento oscillante dei residui, il quale permette di rigettare il nuovo modello, mantenedo quello completo di interazione.
Si esplora le iteazioni tra i fattori e i livelli
\begin{figure}[htb] \centering
<<fig=T, echo=F>>=
interaction.plot(df$A,df$B,df$Yield, xlab = "WaterLevel", ylab = "Yield", trace.label = "WaterType" )
interaction.plot(df$A,df$C,df$Yield, xlab = "WaterLevel", ylab = "Yield", trace.label = "CoffeLoad")
interaction.plot(df$A,df$D,df$Yield, xlab = "WaterLevel", ylab = "Yield", trace.label = "Pressing")
interaction.plot(df$A,df$E,df$Yield, xlab = "WaterLevel", ylab = "Yield", trace.label = "Heat")
@
\end{figure}
\begin{figure}[htb] \centering
<<fig=T, echo=F>>=
interaction.plot(df$B,df$C,df$Yield, xlab = "WaterType", ylab = "Yield", trace.label = "CoffeLoad")
interaction.plot(df$B,df$D,df$Yield, xlab = "WaterType", ylab = "Yield", trace.label = "Pressing")
interaction.plot(df$B,df$E,df$Yield, xlab = "WaterType", ylab = "Yield", trace.label = "Heat")
interaction.plot(df$C,df$D,df$Yield, xlab = "CoffeLoad", ylab = "Yield", trace.label = "Pressing")
@
\end{figure}
\begin{figure}[htb] \centering
<<fig=T, echo=F>>=
interaction.plot(df$C,df$E,df$Yield, xlab = "CoffeLoad", ylab = "Yield", trace.label = "Heat")
interaction.plot(df$D,df$E,df$Yield, xlab = "Pressing", ylab = "Yield", trace.label = "Heat")
@
\end{figure}